// 提示文件帮助 Visual Studio IDE 解释 Visual C++ 标识符,
// 如函数和宏的名称。
// 有关详细信息，请参见 https://go.microsoft.com/fwlink/?linkid=865984
#define Q_DECL_OVERRIDE
#define Q_OBJECT public: QT_WARNING_PUSH Q_OBJECT_NO_OVERRIDE_WARNING static const QMetaObject staticMetaObject; virtual const QMetaObject *metaObject() const; virtual void *qt_metacast(const char *); virtual int qt_metacall(QMetaObject::Call, int, void **); QT_TR_FUNCTIONS private: Q_OBJECT_NO_ATTRIBUTES_WARNING Q_DECL_HIDDEN_STATIC_METACALL static void qt_static_metacall(QObject *, QMetaObject::Call, int, void **); QT_WARNING_POP QT_DEFINE_TAG_STRUCT(QPrivateSignal); QT_ANNOTATE_CLASS(qt_qobject, "")
#define Q_OBJECT
#define Q_NULLPTR
#define emit
#define signals
#define Q_SIGNALS public QT_ANNOTATE_ACCESS_SPECIFIER(qt_signal)
#define Q_SIGNALS
#define QT_BEGIN_NAMESPACE
#define QT_BEGIN_NAMESPACE inline namespace QT_NAMESPACE {
#define QT_BEGIN_NAMESPACE namespace QT_NAMESPACE {
#define QT_END_NAMESPACE
#define QT_END_NAMESPACE }
#define Q_INVOKABLE QT_ANNOTATE_FUNCTION(qt_invokable)
#define Q_INVOKABLE
#define Q_SLOTS QT_ANNOTATE_ACCESS_SPECIFIER(qt_slot)
#define Q_SLOTS
#define slots
#define QT_FORWARD_DECLARE_CLASS(name)
#define QT_FORWARD_DECLARE_CLASS(name) QT_BEGIN_NAMESPACE class name; QT_END_NAMESPACE using QT_PREPEND_NAMESPACE(name);
#define Q_PROPERTY(__VA_ARGS__) QT_ANNOTATE_CLASS(qt_property, __VA_ARGS__)
#define Q_PROPERTY(text) Q_PROPERTY(text)
